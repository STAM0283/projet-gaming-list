{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/projets-perso/My-Game-List/my_game_list/src/components/MovieGame.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\n\nconst MovieGame = () => {\n  const [listGame, setListGame] = useState(null);\n  const [previewGames, setPreviewGames] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [idGame, setIdGame] = useState(0);\n  useEffect(() => {\n    axios.get(\"https://wild-games.herokuapp.com/api/v1\").then(response => {\n      //console.log(response.data.map((item) => item.clip));\n      setListGame(response.data.map(item => item.clip.clips));\n      setPreviewGames(response.data.map(item => item.clip));\n    });\n  }, []);\n\n  const handleId = () => {\n    setIdGame(idGame + 1);\n    setModalIsOpen(true);\n  };\n\n  return listGame !== null && previewGames !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"movie\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"white\",\n      fontSize: \"xx-large\",\n      fontWeight: \"bold\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }, \"There are : \", previewGames.length, \" videos\"), listGame.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"movieGame\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modalIsOpen,\n      style: {\n        content: {\n          backgroundColor: \"black\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"45%\",\n        marginBottom: \"30px\",\n        marginTop: \"10px\",\n        color: \"white\",\n        backgroundColor: \"transparent\",\n        background: \"transparent\",\n        border: \"solid 5px wheat\",\n        boxShadow: \"0px 0px 20px #00ccff\",\n        inset: \"0px 0px 20px #00ccff\"\n      },\n      onClick: () => setModalIsOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, \"Hide the modal\"), /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"video\",\n      className: \"imgPreview\",\n      src: previewGames[idGame].preview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }), \";\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"45%\",\n        marginBottom: \"30px\",\n        marginTop: \"10px\",\n        color: \"white\",\n        backgroundColor: \"transparent\",\n        background: \"transparent\",\n        border: \"solid 5px wheat\",\n        boxShadow: \"0px 0px 20px #00ccff\",\n        inset: \"0px 0px 20px #00ccff\"\n      },\n      onClick: () => setModalIsOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }\n    }, \"Hide the modal\")), /*#__PURE__*/React.createElement(\"video\", {\n      id: \"video\",\n      controls: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"source\", {\n      src: item.full,\n      type: \"video/mp4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }), \"Your browser does not support the video tag.\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"50%\",\n        marginBottom: \"30px\",\n        marginTop: \"10px\",\n        color: \"white\",\n        backgroundColor: \"transparent\",\n        background: \"transparent\",\n        border: \"solid 5px wheat\",\n        boxShadow: \"0px 0px 20px #00ccff\",\n        inset: \"0px 0px 20px #00ccff\"\n      },\n      onClick: handleId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, \"previeuw\"));\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }\n  }, \"Pas de data\");\n};\n\nexport default MovieGame;","map":{"version":3,"sources":["/home/wilder/Documents/projets-perso/My-Game-List/my_game_list/src/components/MovieGame.jsx"],"names":["React","useState","useEffect","Modal","axios","MovieGame","listGame","setListGame","previewGames","setPreviewGames","modalIsOpen","setModalIsOpen","idGame","setIdGame","get","then","response","data","map","item","clip","clips","handleId","color","fontSize","fontWeight","length","content","backgroundColor","width","height","marginLeft","marginBottom","marginTop","background","border","boxShadow","inset","preview","full"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,IAAD,CAAxC;AACA,QAAM,CAACO,YAAD,EAAeC,eAAf,IAAkCR,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACS,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAAC,CAAD,CAApC;AACAC,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,KAAK,CAACU,GAAN,CAAU,yCAAV,EAAqDC,IAArD,CAA2DC,QAAD,IAAc;AACtE;AACAT,MAAAA,WAAW,CAACS,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAUA,IAAI,CAACC,IAAL,CAAUC,KAAtC,CAAD,CAAX;AACAZ,MAAAA,eAAe,CAACO,QAAQ,CAACC,IAAT,CAAcC,GAAd,CAAmBC,IAAD,IAAUA,IAAI,CAACC,IAAjC,CAAD,CAAf;AACD,KAJD;AAKD,GANQ,EAMN,EANM,CAAT;;AAOA,QAAME,QAAQ,GAAG,MAAM;AACrBT,IAAAA,SAAS,CAACD,MAAM,GAAG,CAAV,CAAT;AACAD,IAAAA,cAAc,CAAC,IAAD,CAAd;AACD,GAHD;;AAIA,SAAOL,QAAQ,KAAK,IAAb,IAAqBE,YAAY,KAAK,IAAtC,gBACL;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,KAAK,EAAE;AAAEe,MAAAA,KAAK,EAAE,OAAT;AAAkBC,MAAAA,QAAQ,EAAE,UAA5B;AAAwCC,MAAAA,UAAU,EAAE;AAApD,KAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACejB,YAAY,CAACkB,MAD5B,YADF,EAIGpB,QAAQ,CAACY,GAAT,CAAcC,IAAD,IAAU;AACtB,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,MAAM,EAAET,WADV;AAEE,MAAA,KAAK,EAAE;AACLiB,QAAAA,OAAO,EAAE;AACPC,UAAAA,eAAe,EAAE;AADV;AADJ,OAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLN,QAAAA,QAAQ,EAAE,OAHL;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLM,QAAAA,UAAU,EAAE,KALP;AAMLC,QAAAA,YAAY,EAAE,MANT;AAOLC,QAAAA,SAAS,EAAE,MAPN;AAQLV,QAAAA,KAAK,EAAE,OARF;AASLK,QAAAA,eAAe,EAAE,aATZ;AAULM,QAAAA,UAAU,EAAE,aAVP;AAWLC,QAAAA,MAAM,EAAE,iBAXH;AAYLC,QAAAA,SAAS,EAAE,sBAZN;AAaLC,QAAAA,KAAK,EAAE;AAbF,OADT;AAgBE,MAAA,OAAO,EAAE,MAAM1B,cAAc,CAAC,KAAD,CAhB/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAqBE;AACE,MAAA,GAAG,EAAC,OADN;AAEE,MAAA,SAAS,EAAC,YAFZ;AAGE,MAAA,GAAG,EAAEH,YAAY,CAACI,MAAD,CAAZ,CAAqB0B,OAH5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,MARF,eAqCE;AACE,MAAA,KAAK,EAAE;AACLT,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLN,QAAAA,QAAQ,EAAE,OAHL;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLM,QAAAA,UAAU,EAAE,KALP;AAMLC,QAAAA,YAAY,EAAE,MANT;AAOLC,QAAAA,SAAS,EAAE,MAPN;AAQLV,QAAAA,KAAK,EAAE,OARF;AASLK,QAAAA,eAAe,EAAE,aATZ;AAULM,QAAAA,UAAU,EAAE,aAVP;AAWLC,QAAAA,MAAM,EAAE,iBAXH;AAYLC,QAAAA,SAAS,EAAE,sBAZN;AAaLC,QAAAA,KAAK,EAAE;AAbF,OADT;AAgBE,MAAA,OAAO,EAAE,MAAM1B,cAAc,CAAC,KAAD,CAhB/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBArCF,CADF,eA2DE;AAAO,MAAA,EAAE,EAAC,OAAV;AAAkB,MAAA,QAAQ,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAQ,MAAA,GAAG,EAAEQ,IAAI,CAACoB,IAAlB;AAAwB,MAAA,IAAI,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,iDA3DF,eA+DE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA/DF,eAgEE;AACE,MAAA,KAAK,EAAE;AACLV,QAAAA,KAAK,EAAE,KADF;AAELC,QAAAA,MAAM,EAAE,MAFH;AAGLN,QAAAA,QAAQ,EAAE,OAHL;AAILC,QAAAA,UAAU,EAAE,QAJP;AAKLM,QAAAA,UAAU,EAAE,KALP;AAMLC,QAAAA,YAAY,EAAE,MANT;AAOLC,QAAAA,SAAS,EAAE,MAPN;AAQLV,QAAAA,KAAK,EAAE,OARF;AASLK,QAAAA,eAAe,EAAE,aATZ;AAULM,QAAAA,UAAU,EAAE,aAVP;AAWLC,QAAAA,MAAM,EAAE,iBAXH;AAYLC,QAAAA,SAAS,EAAE,sBAZN;AAaLC,QAAAA,KAAK,EAAE;AAbF,OADT;AAgBE,MAAA,OAAO,EAAEf,QAhBX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAhEF,CADF;AAuFD,GAxFA,CAJH,CADK,gBAgGL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAhGF;AAkGD,CAlHD;;AAoHA,eAAejB,SAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Modal from \"react-modal\";\nimport axios from \"axios\";\n\nconst MovieGame = () => {\n  const [listGame, setListGame] = useState(null);\n  const [previewGames, setPreviewGames] = useState(null);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [idGame, setIdGame] = useState(0);\n  useEffect(() => {\n    axios.get(\"https://wild-games.herokuapp.com/api/v1\").then((response) => {\n      //console.log(response.data.map((item) => item.clip));\n      setListGame(response.data.map((item) => item.clip.clips));\n      setPreviewGames(response.data.map((item) => item.clip));\n    });\n  }, []);\n  const handleId = () => {\n    setIdGame(idGame + 1);\n    setModalIsOpen(true);\n  };\n  return listGame !== null && previewGames !== null ? (\n    <div className=\"movie\">\n      <p style={{ color: \"white\", fontSize: \"xx-large\", fontWeight: \"bold\" }}>\n        There are : {previewGames.length} videos\n      </p>\n      {listGame.map((item) => {\n        return (\n          <div className=\"movieGame\">\n            <Modal\n              isOpen={modalIsOpen}\n              style={{\n                content: {\n                  backgroundColor: \"black\",\n                },\n              }}\n            >\n              <div>\n                <button\n                  style={{\n                    width: \"10%\",\n                    height: \"40px\",\n                    fontSize: \"large\",\n                    fontWeight: \"bolder\",\n                    marginLeft: \"45%\",\n                    marginBottom: \"30px\",\n                    marginTop: \"10px\",\n                    color: \"white\",\n                    backgroundColor: \"transparent\",\n                    background: \"transparent\",\n                    border: \"solid 5px wheat\",\n                    boxShadow: \"0px 0px 20px #00ccff\",\n                    inset: \"0px 0px 20px #00ccff\",\n                  }}\n                  onClick={() => setModalIsOpen(false)}\n                >\n                  Hide the modal\n                </button>\n                <img\n                  alt=\"video\"\n                  className=\"imgPreview\"\n                  src={previewGames[idGame].preview}\n                />\n                ;\n              </div>\n\n              <button\n                style={{\n                  width: \"10%\",\n                  height: \"40px\",\n                  fontSize: \"large\",\n                  fontWeight: \"bolder\",\n                  marginLeft: \"45%\",\n                  marginBottom: \"30px\",\n                  marginTop: \"10px\",\n                  color: \"white\",\n                  backgroundColor: \"transparent\",\n                  background: \"transparent\",\n                  border: \"solid 5px wheat\",\n                  boxShadow: \"0px 0px 20px #00ccff\",\n                  inset: \"0px 0px 20px #00ccff\",\n                }}\n                onClick={() => setModalIsOpen(false)}\n              >\n                Hide the modal\n              </button>\n            </Modal>\n            <video id=\"video\" controls>\n              <source src={item.full} type=\"video/mp4\" />\n              Your browser does not support the video tag.\n            </video>\n            <div></div>\n            <button\n              style={{\n                width: \"10%\",\n                height: \"40px\",\n                fontSize: \"large\",\n                fontWeight: \"bolder\",\n                marginLeft: \"50%\",\n                marginBottom: \"30px\",\n                marginTop: \"10px\",\n                color: \"white\",\n                backgroundColor: \"transparent\",\n                background: \"transparent\",\n                border: \"solid 5px wheat\",\n                boxShadow: \"0px 0px 20px #00ccff\",\n                inset: \"0px 0px 20px #00ccff\",\n              }}\n              onClick={handleId}\n            >\n              previeuw\n            </button>\n          </div>\n        );\n      })}\n    </div>\n  ) : (\n    <p>Pas de data</p>\n  );\n};\n\nexport default MovieGame;\n"]},"metadata":{},"sourceType":"module"}