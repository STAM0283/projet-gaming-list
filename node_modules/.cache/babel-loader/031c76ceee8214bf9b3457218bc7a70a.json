{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/projets-perso/My-Game-List/my_game_list/src/components/GameList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nconst GameList = () => {\n  const [listGames, setListGames] = useState(null);\n  const [bestGame, setBestGame] = useState(\"\");\n  const [actionGame, setActionGame] = useState(null);\n  const [shooterGame, setShooterGame] = useState(null);\n  const [rpgGame, setRpgGame] = useState(null);\n  const [allGames, setAllGame] = useState(\"\");\n  const [modalGameIsOpen, setModalGameIsOpen] = useState(false);\n  const [moreInfos, setMoreInfos] = useState(null);\n  const [idScreenshots, setIdScreenshots] = useState(0);\n  useEffect(() => {\n    axios.get(\"https://wild-games.herokuapp.com/api/v1\").then(response => {\n      setListGames(response.data.map(item => item));\n      setBestGame(response.data.filter(note => note.rating >= 4.5));\n      setAllGame(response.data.map(item => item));\n      setMoreInfos(response.data.map(item => item.short_screenshots));\n      setActionGame(response.data.map(item => item.genres[0]).filter(item => item.name === \"Action\"));\n      setShooterGame(response.data.map(item => item.genres[0]).filter(item => item.name === \"Shooter\"));\n      setRpgGame(response.data.map(item => item.genres[0]).filter(item => item.name === \"RPG\"));\n    });\n  }, []);\n  return listGames !== null && moreInfos !== null && actionGame !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(bestGame),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, \"Best Games\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(allGames),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, \"All Games\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(actionGame),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }, \"Action Games\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(shooterGame),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, \"Shooter Games\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(rpgGame),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"RPG Games\"), listGames.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"listPicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modalGameIsOpen,\n      style: {\n        content: {\n          backgroundColor: \"black\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"10px\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n        backgroundColor: \"transparent\",\n        color: \"white\"\n      },\n      onClick: () => setModalGameIsOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 15\n      }\n    }, \"hide the modal\"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"10px\",\n        marginBottom: \"30px\",\n        marginTop: \"10px\",\n        color: \"white\"\n      },\n      onClick: () => setIdScreenshots(idScreenshots + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, \" \", \"+ Screenshots\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 15\n      }\n    }, moreInfos.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          marginBottom: \"30px\",\n          width: \"80%\",\n          marginLeft: \"10%\",\n          border: \"solid 5px wheat\",\n          boxShadow: \"0px 0px 20px #00ccff\",\n          inset: \"0px 0px 20px #00ccff\",\n          inset: \"0px 0px 60px #00ffff\"\n        },\n        src: item[idScreenshots].image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 23\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"10px\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      onClick: () => setModalGameIsOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }, \"hide the modal\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"10px\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      onClick: () => setIdScreenshots(idScreenshots + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, \" \", \"+ Screenshots\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contour-listGame\",\n      style: {\n        borderRadius: \"5%\",\n        width: \"90%\",\n        marginBottom: \"30px\",\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 15\n      }\n    }, \"Name : \", item.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 15\n      }\n    }, \"Release : \", item.released || \"Action Game 2019\"), /*#__PURE__*/React.createElement(\"img\", {\n      src: item.background_image || item.image_background,\n      alt: \"picture-game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 15\n      }\n    }, \"Evaluation : \", item.rating || \"Good Game\", \"/5\"), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"progress\", {\n      id: \"file\",\n      max: \"5\",\n      value: item.rating || 4.5,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 15\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setModalGameIsOpen(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, \"Screenshots\")));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(bestGame),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }\n  }, \"Best Games\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(allGames),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, \"All Games\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 5\n    }\n  }, \"Pas de data\");\n};\n\nexport default GameList;","map":{"version":3,"sources":["/home/wilder/Documents/projets-perso/My-Game-List/my_game_list/src/components/GameList.jsx"],"names":["React","useState","useEffect","axios","Modal","GameList","listGames","setListGames","bestGame","setBestGame","actionGame","setActionGame","shooterGame","setShooterGame","rpgGame","setRpgGame","allGames","setAllGame","modalGameIsOpen","setModalGameIsOpen","moreInfos","setMoreInfos","idScreenshots","setIdScreenshots","get","then","response","data","map","item","filter","note","rating","short_screenshots","genres","name","content","backgroundColor","width","height","fontSize","fontWeight","marginLeft","marginBottom","marginTop","color","border","boxShadow","inset","image","borderRadius","released","background_image","image_background"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nconst GameList = () => {\n  const [listGames, setListGames] = useState(null);\n  const [bestGame, setBestGame] = useState(\"\");\n  const [actionGame, setActionGame] = useState(null);\n  const [shooterGame, setShooterGame] = useState(null);\n  const [rpgGame, setRpgGame] = useState(null);\n  const [allGames, setAllGame] = useState(\"\");\n  const [modalGameIsOpen, setModalGameIsOpen] = useState(false);\n  const [moreInfos, setMoreInfos] = useState(null);\n  const [idScreenshots, setIdScreenshots] = useState(0);\n  useEffect(() => {\n    axios.get(\"https://wild-games.herokuapp.com/api/v1\").then((response) => {\n      setListGames(response.data.map((item) => item));\n      setBestGame(response.data.filter((note) => note.rating >= 4.5));\n      setAllGame(response.data.map((item) => item));\n      setMoreInfos(response.data.map((item) => item.short_screenshots));\n      setActionGame(\n        response.data\n          .map((item) => item.genres[0])\n          .filter((item) => item.name === \"Action\")\n      );\n      setShooterGame(\n        response.data\n          .map((item) => item.genres[0])\n          .filter((item) => item.name === \"Shooter\")\n      );\n      setRpgGame(\n        response.data\n          .map((item) => item.genres[0])\n          .filter((item) => item.name === \"RPG\")\n      );\n    });\n  }, []);\n  return listGames !== null && moreInfos !== null && actionGame !== null ? (\n    <div className=\"app\">\n      <button onClick={() => setListGames(bestGame)}>Best Games</button>\n      <button onClick={() => setListGames(allGames)}>All Games</button>\n      <button onClick={() => setListGames(actionGame)}>Action Games</button>\n      <button onClick={() => setListGames(shooterGame)}>Shooter Games</button>\n      <button onClick={() => setListGames(rpgGame)}>RPG Games</button>\n      {listGames.map((item) => {\n        return (\n          <div className=\"listPicture\">\n            <Modal\n              isOpen={modalGameIsOpen}\n              style={{\n                content: {\n                  backgroundColor: \"black\",\n                },\n              }}\n            >\n              <button\n                style={{\n                  width: \"10%\",\n                  height: \"40px\",\n                  fontSize: \"large\",\n                  fontWeight: \"bolder\",\n                  marginLeft: \"10px\",\n                  marginBottom: \"10px\",\n                  marginTop: \"10px\",\n                  backgroundColor: \"transparent\",\n                  color: \"white\",\n                }}\n                onClick={() => setModalGameIsOpen(false)}\n              >\n                hide the modal\n              </button>{\" \"}\n              <button\n                style={{\n                  width: \"10%\",\n                  height: \"40px\",\n                  fontSize: \"large\",\n                  fontWeight: \"bolder\",\n                  marginLeft: \"10px\",\n                  marginBottom: \"30px\",\n                  marginTop: \"10px\",\n                  color: \"white\",\n                }}\n                onClick={() => setIdScreenshots(idScreenshots + 1)}\n              >\n                {\" \"}\n                + Screenshots\n              </button>\n              <div>\n                {moreInfos.map((item) => {\n                  return (\n                    <div>\n                      <img\n                        style={{\n                          marginBottom: \"30px\",\n                          width: \"80%\",\n                          marginLeft: \"10%\",\n                          border: \"solid 5px wheat\",\n                          boxShadow: \"0px 0px 20px #00ccff\",\n                          inset: \"0px 0px 20px #00ccff\",\n                          inset: \"0px 0px 60px #00ffff\",\n                        }}\n                        src={item[idScreenshots].image}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              <button\n                style={{\n                  width: \"10%\",\n                  height: \"40px\",\n                  fontSize: \"large\",\n                  fontWeight: \"bolder\",\n                  marginLeft: \"10px\",\n                  marginBottom: \"10px\",\n                  marginTop: \"10px\",\n                }}\n                onClick={() => setModalGameIsOpen(false)}\n              >\n                hide the modal\n              </button>\n              <button\n                style={{\n                  width: \"10%\",\n                  height: \"40px\",\n                  fontSize: \"large\",\n                  fontWeight: \"bolder\",\n                  marginLeft: \"10px\",\n                  marginBottom: \"10px\",\n                  marginTop: \"10px\",\n                }}\n                onClick={() => setIdScreenshots(idScreenshots + 1)}\n              >\n                {\" \"}\n                + Screenshots\n              </button>\n            </Modal>\n            <div\n              className=\"contour-listGame\"\n              style={{\n                borderRadius: \"5%\",\n                width: \"90%\",\n                marginBottom: \"30px\",\n                backgroundColor: \"black\",\n              }}\n            >\n              <p>Name : {item.name}</p>\n              <p>Release : {item.released || \"Action Game 2019\"}</p>\n              <img\n                src={item.background_image || item.image_background}\n                alt=\"picture-game\"\n              />\n              <p>Evaluation : {item.rating || \"Good Game\"}/5</p>\n              <label for=\"file\"></label>\n\n              <progress id=\"file\" max=\"5\" value={item.rating || 4.5}>\n                {\" \"}\n              </progress>\n              <button onClick={() => setModalGameIsOpen(true)}>\n                Screenshots\n              </button>\n            </div>\n          </div>\n        );\n      })}\n\n      <button onClick={() => setListGames(bestGame)}>Best Games</button>\n      <button onClick={() => setListGames(allGames)}>All Games</button>\n    </div>\n  ) : (\n    <p>Pas de data</p>\n  );\n};\n\nexport default GameList;\n"]},"metadata":{},"sourceType":"module"}