{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/projets-perso/My-Game-List/my_game_list/src/components/GameList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nconst GameList = () => {\n  const [listGames, setListGames] = useState(null);\n  const [bestGame, setBestGame] = useState(\"\");\n  const [allGames, setAllGame] = useState(\"\");\n  const [modalGameIsOpen, setModalGameIsOpen] = useState(false);\n  const [moreInfos, setMoreInfos] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://wild-games.herokuapp.com/api/v1\").then(response => {\n      setListGames(response.data.map(item => item));\n      setBestGame(response.data.filter(note => note.rating >= 4.5));\n      setAllGame(response.data.map(item => item));\n      setMoreInfos(response.data.map(item => item.short_screenshots));\n    });\n  }, []);\n  return listGames !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, null, moreInfos.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: item[4].image,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }));\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(bestGame),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, \"Best Games\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(allGames),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"All Games\"), listGames.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"listPicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setModalGameIsOpen(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"more infos\"), /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modalGameIsOpen,\n      style: {\n        content: {\n          backgroundColor: \"greenyellow\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"10px\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      onClick: () => setModalGameIsOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, \"hide the modal\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        border: \"2px solid black\",\n        width: \"90%\",\n        marginBottom: \"30px\",\n        backgroundColor: \"gray\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }\n    }, \"Name : \", item.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, \"Release : \", item.released), /*#__PURE__*/React.createElement(\"img\", {\n      src: item.background_image,\n      alt: \"picture-game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, \"Evaluation : \", item.rating, \"/5\"), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"progress\", {\n      id: \"file\",\n      max: \"5\",\n      value: item.rating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, \" \")));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(bestGame),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, \"Best Games\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(allGames),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, \"All Games\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"Pas de data\");\n};\n\nexport default GameList;","map":{"version":3,"sources":["/home/wilder/Documents/projets-perso/My-Game-List/my_game_list/src/components/GameList.jsx"],"names":["React","useState","useEffect","axios","Modal","GameList","listGames","setListGames","bestGame","setBestGame","allGames","setAllGame","modalGameIsOpen","setModalGameIsOpen","moreInfos","setMoreInfos","get","then","response","data","map","item","filter","note","rating","short_screenshots","image","content","backgroundColor","width","height","fontSize","fontWeight","marginLeft","marginBottom","marginTop","border","name","released","background_image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nconst GameList = () => {\n  const [listGames, setListGames] = useState(null);\n  const [bestGame, setBestGame] = useState(\"\");\n  const [allGames, setAllGame] = useState(\"\");\n  const [modalGameIsOpen, setModalGameIsOpen] = useState(false);\n  const [moreInfos, setMoreInfos] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"https://wild-games.herokuapp.com/api/v1\").then((response) => {\n      setListGames(response.data.map((item) => item));\n      setBestGame(response.data.filter((note) => note.rating >= 4.5));\n      setAllGame(response.data.map((item) => item));\n      setMoreInfos(response.data.map((item) => item.short_screenshots));\n    });\n  }, []);\n  return listGames !== null ? (\n    \n    <div className=\"App\">\n    <>\n    {moreInfos.map((item) => {\n      return (\n        <div>\n          <img src={item[4].image} />\n        </div>\n      );\n    })}\n    </>\n      <button onClick={() => setListGames(bestGame)}>Best Games</button>\n      <button onClick={() => setListGames(allGames)}>All Games</button>\n      {listGames.map((item) => {\n        return (\n          <div className=\"listPicture\">\n            <button onClick={() => setModalGameIsOpen(true)}>more infos</button>\n            <Modal\n              isOpen={modalGameIsOpen}\n              style={{\n                content: {\n                  backgroundColor: \"greenyellow\",\n                },\n              }}\n            >\n              <button\n                style={{\n                  width: \"10%\",\n                  height: \"40px\",\n                  fontSize: \"large\",\n                  fontWeight: \"bolder\",\n                  marginLeft: \"10px\",\n                  marginBottom: \"10px\",\n                  marginTop: \"10px\",\n                }}\n                onClick={() => setModalGameIsOpen(false)}\n              >\n                hide the modal\n              </button>\n            </Modal>\n            <div\n              style={{\n                border: \"2px solid black\",\n                width: \"90%\",\n                marginBottom: \"30px\",\n                backgroundColor: \"gray\",\n              }}\n            >\n              <p>Name : {item.name}</p>\n              <p>Release : {item.released}</p>\n              <img src={item.background_image} alt=\"picture-game\" />\n              <p>Evaluation : {item.rating}/5</p>\n              <label for=\"file\"></label>\n\n              <progress id=\"file\" max=\"5\" value={item.rating}>\n                {\" \"}\n              </progress>\n            </div>\n          </div>\n        );\n      })}\n\n      <button onClick={() => setListGames(bestGame)}>Best Games</button>\n      <button onClick={() => setListGames(allGames)}>All Games</button>\n    </div>\n  ) : (\n    <p>Pas de data</p>\n  );\n};\n\nexport default GameList;\n"]},"metadata":{},"sourceType":"module"}