{"ast":null,"code":"var _jsxFileName = \"/home/wilder/Documents/projets-perso/My-Game-List/my_game_list/src/components/GameList.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nconst GameList = () => {\n  const [listGames, setListGames] = useState(null);\n  const [bestGame, setBestGame] = useState(\"\");\n  const [actionGame, setActionGame] = useState(\"\");\n  const [allGames, setAllGame] = useState(\"\");\n  const [modalGameIsOpen, setModalGameIsOpen] = useState(false);\n  const [moreInfos, setMoreInfos] = useState(null);\n  const [idScreenshots, setIdScreenshots] = useState(0);\n  useEffect(() => {\n    axios.get(\"https://wild-games.herokuapp.com/api/v1\").then(response => {\n      setListGames(response.data.map(item => item));\n      setBestGame(response.data.filter(note => note.rating >= 4.5));\n      setActionGame();\n      setAllGame(response.data.map(item => item));\n      setMoreInfos(response.data.map(item => item.short_screenshots));\n    });\n  }, []);\n  return listGames !== null && moreInfos !== null ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(bestGame),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, \"Best Games\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(allGames),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, \"All Games\"), listGames.map(item => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"listPicture\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      isOpen: modalGameIsOpen,\n      style: {\n        content: {\n          backgroundColor: \"black\"\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"10px\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\",\n        backgroundColor: \"transparent\",\n        color: \"white\"\n      },\n      onClick: () => setModalGameIsOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }, \"hide the modal\"), ' ', /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"10px\",\n        marginBottom: \"30px\",\n        marginTop: \"10px\",\n        color: \"white\"\n      },\n      onClick: () => setIdScreenshots(idScreenshots + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \" \", \"+ Screenshots\"), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, moreInfos.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        style: {\n          marginBottom: \"30px\",\n          width: \"80%\",\n          marginLeft: \"10%\",\n          border: \"solid 5px wheat\",\n          boxShadow: \"0px 0px 20px #00ccff\",\n          inset: \"0px 0px 20px #00ccff\",\n          inset: \"0px 0px 60px #00ffff\"\n        },\n        src: item[idScreenshots].image,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 23\n        }\n      }));\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"10px\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      onClick: () => setModalGameIsOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, \"hide the modal\"), /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        width: \"10%\",\n        height: \"40px\",\n        fontSize: \"large\",\n        fontWeight: \"bolder\",\n        marginLeft: \"10px\",\n        marginBottom: \"10px\",\n        marginTop: \"10px\"\n      },\n      onClick: () => setIdScreenshots(idScreenshots + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, \" \", \"+ Screenshots\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"contour-listGame\",\n      style: {\n        borderRadius: \"5%\",\n        width: \"90%\",\n        marginBottom: \"30px\",\n        backgroundColor: \"black\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, \"Name : \", item.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, \"Release : \", item.released), /*#__PURE__*/React.createElement(\"img\", {\n      src: item.background_image,\n      alt: \"picture-game\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, \"Evaluation : \", item.rating, \"/5\"), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"progress\", {\n      id: \"file\",\n      max: \"5\",\n      value: item.rating,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, \" \"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => setModalGameIsOpen(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, \"Screenshots\")));\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(bestGame),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Best Games\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => setListGames(allGames),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, \"All Games\")) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, \"Pas de data\");\n};\n\nexport default GameList;","map":{"version":3,"sources":["/home/wilder/Documents/projets-perso/My-Game-List/my_game_list/src/components/GameList.jsx"],"names":["React","useState","useEffect","axios","Modal","GameList","listGames","setListGames","bestGame","setBestGame","actionGame","setActionGame","allGames","setAllGame","modalGameIsOpen","setModalGameIsOpen","moreInfos","setMoreInfos","idScreenshots","setIdScreenshots","get","then","response","data","map","item","filter","note","rating","short_screenshots","content","backgroundColor","width","height","fontSize","fontWeight","marginLeft","marginBottom","marginTop","color","border","boxShadow","inset","image","borderRadius","name","released","background_image"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Modal from \"react-modal\";\n\nconst GameList = () => {\n  const [listGames, setListGames] = useState(null);\n  const [bestGame, setBestGame] = useState(\"\");\n  const [actionGame, setActionGame] = useState(\"\"); \n  const [allGames, setAllGame] = useState(\"\");\n  const [modalGameIsOpen, setModalGameIsOpen] = useState(false);\n  const [moreInfos, setMoreInfos] = useState(null);\n  const [idScreenshots, setIdScreenshots] = useState(0);\n  useEffect(() => {\n    axios.get(\"https://wild-games.herokuapp.com/api/v1\").then((response) => {\n      setListGames(response.data.map((item) => item));\n      setBestGame(response.data.filter((note) => note.rating >= 4.5));\n      setActionGame()\n      setAllGame(response.data.map((item) => item));\n      setMoreInfos(response.data.map((item) => item.short_screenshots));\n    });\n  }, []);\n  return listGames !== null && moreInfos !== null ? (\n    <div className=\"app\">\n      <button onClick={() => setListGames(bestGame)}>Best Games</button>\n      <button onClick={() => setListGames(allGames)}>All Games</button>\n      {listGames.map((item) => {\n        return (\n          <div className=\"listPicture\">\n            <Modal\n              isOpen={modalGameIsOpen}\n              style={{\n                content: {\n                  backgroundColor: \"black\",\n                },\n              }}\n            >\n              <button\n                style={{\n                  width: \"10%\",\n                  height: \"40px\",\n                  fontSize: \"large\",\n                  fontWeight: \"bolder\",\n                  marginLeft: \"10px\",\n                  marginBottom: \"10px\",\n                  marginTop: \"10px\",\n                  backgroundColor: \"transparent\",\n                  color: \"white\",\n                }}\n                onClick={() => setModalGameIsOpen(false)}\n              >\n                hide the modal\n              </button>{' '}\n              <button\n                style={{\n                  width: \"10%\",\n                  height: \"40px\",\n                  fontSize: \"large\",\n                  fontWeight: \"bolder\",\n                  marginLeft: \"10px\",\n                  marginBottom: \"30px\",\n                  marginTop: \"10px\",\n                  color: \"white\"\n                }}\n                onClick={() => setIdScreenshots(idScreenshots + 1)}\n              >\n                {\" \"}\n                + Screenshots\n              </button>\n              <div>\n                {moreInfos.map((item) => {\n                  return (\n                    <div>\n                      <img\n                        style={{\n                          marginBottom: \"30px\",\n                          width: \"80%\",\n                          marginLeft: \"10%\",\n                          border: \"solid 5px wheat\",\n                          boxShadow: \"0px 0px 20px #00ccff\",\n                          inset: \"0px 0px 20px #00ccff\",\n                          inset: \"0px 0px 60px #00ffff\",\n                        }}\n                        src={item[idScreenshots].image}\n                      />\n                    </div>\n                  );\n                })}\n              </div>\n              <button\n                style={{\n                  width: \"10%\",\n                  height: \"40px\",\n                  fontSize: \"large\",\n                  fontWeight: \"bolder\",\n                  marginLeft: \"10px\",\n                  marginBottom: \"10px\",\n                  marginTop: \"10px\",\n                }}\n                onClick={() => setModalGameIsOpen(false)}\n              >\n                hide the modal\n              </button>\n              <button\n                style={{\n                  width: \"10%\",\n                  height: \"40px\",\n                  fontSize: \"large\",\n                  fontWeight: \"bolder\",\n                  marginLeft: \"10px\",\n                  marginBottom: \"10px\",\n                  marginTop: \"10px\",\n                }}\n                onClick={() => setIdScreenshots(idScreenshots + 1)}\n              >\n                {\" \"}\n                + Screenshots\n              </button>\n            </Modal>\n            <div\n              className=\"contour-listGame\"\n              style={{\n                borderRadius: \"5%\",\n                width: \"90%\",\n                marginBottom: \"30px\",\n                backgroundColor: \"black\",\n              }}\n            >\n              <p>Name : {item.name}</p>\n              <p>Release : {item.released}</p>\n              <img src={item.background_image} alt=\"picture-game\" />\n              <p>Evaluation : {item.rating}/5</p>\n              <label for=\"file\"></label>\n\n              <progress id=\"file\" max=\"5\" value={item.rating}>\n                {\" \"}\n              </progress>\n              <button onClick={() => setModalGameIsOpen(true)}>\n                Screenshots\n              </button>\n            </div>\n          </div>\n        );\n      })}\n\n      <button onClick={() => setListGames(bestGame)}>Best Games</button>\n      <button onClick={() => setListGames(allGames)}>All Games</button>\n    </div>\n  ) : (\n    <p>Pas de data</p>\n  );\n};\n\nexport default GameList;\n"]},"metadata":{},"sourceType":"module"}